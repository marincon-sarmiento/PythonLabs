#  "For this challenge, create a bank account class that has two
#  attributes (owner, balance) and two methods (deposit, withdraw)
#  As an added requirement, withdrawals may not exceed the available
#  balance. Instantiate your class, make several deposits and withdrawals
#  , and test to make sure the account can't be overdrawn."


class Account:
    def __init__(self, owner, balance):
        self.owner = owner
        self.balance = balance

    def __str__(self):
        return 'Owner: Mr.{}\nBalance: ${}'.format(self.owner, self.balance)

    def deposit(self, amount):
        self.balance += amount
        print('Deposit Accepted')

    def withdraw(self, amount):
        if amount > self.balance:
            print('Funds Unavailable!')
        else:
            self.balance -= amount
            print('Withdrawal Accepted')


acct1 = Account('Miguel', 100)
print(acct1)

acct1.owner

acct1.balance

acct1.deposit(50)
# Will be allowed
acct1.withdraw(75)
# Will be allowed
acct1.withdraw(500)
# won't happen since the amount being withdrawn is bigger than the balance int the account
