import random
'''
For this warm up exercise I will be coding a simulated game of war
between two virtual players. A 52 card deck will be sorted and
divided between the two players. Each round a card from both decks
is selected randomly. The player with the highest ranking card takes
all cards for their own deck.

If the cards have the same rank, then it is war, both players have to
take out another 3 cards and select one of them to go to war, if again,
the cards selected end up in the same rank, an extra card will be taken
out by each player until wins. The winner of the war takes all the cards
back to their own deck.
'''


# card class
# understand the suit, rank, and value of the card
suits = ('Hearts', 'Diamonds', 'Spades', 'Clubs')
ranks = ('Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Jack', 'Queen', 'King', 'Ace')
values = {'One': 1, 'Two': 2, 'Three': 3, 'Four': 4, 'Five': 5, 'Six': 6, 'Seven': 7,
          'Eight': 8, 'Nine': 9, 'Ten': 10, 'Jack': 11, 'Queen': 12, 'King': 13, 'Ace': 14}


class Card:

    def __init__(self, suit, rank):
        self.suit = suit
        self.rank = rank
        self.value = values[rank]

    def __str__(self):
        return self.rank + ' of ' + self.suit


class Deck:
    def __init__(self):

        self.all_cards = []

        for suit in suits:
            for rank in ranks:
                # create the Card Object
                created_card = Card(suit, rank)
                self.all_cards.append(created_card)

    def shuffle(self):
        random.shuffle(self.all_cards)

    def deal_one(self):
        return self.all_cards.pop()


class Player:
    def __init__(self, name):
        self.name = name
        self.all_cards = []

    def remove_one(self):
        return self.all_cards.pop(0)

    def add_cards(self, new_cards):
        if isinstance(new_cards, list):
            self.all_cards.extend(new_cards)
        else:
            self.all_cards.append(new_cards)

    def __str__(self):
        return "Player {} has {} cards in their hand".format(self.name, len(self.all_cards))


# Game setup
player1 = Player('One')
player2 = Player('Two')

new_deck = Deck()
new_deck.shuffle()

for x in range(26):
    player1.add_cards(new_deck.deal_one())
    player2.add_cards(new_deck.deal_one())

game_on = True
round_num = 0

while game_on:
    round_num += 1
    print(f'Round {round_num}')

    if len(player1.all_cards) == 0:
        print('Player Two is the winner!')
        break
    if len(player2.all_cards) == 0:
        print('Player 1 is the winner')
        break

    # START A NEW ROUND
    player_one_cards = []
    player_two_cards = []

    player_one_cards.append(player1.remove_one())
    player_two_cards.append(player2.remove_one())

    # While at war
    at_war = True

    while at_war:
        if player_one_cards[-1].value > player_two_cards[-1].value:
            player1.add_cards(player_one_cards)
            player1.add_cards(player_two_cards)
            at_war = False
        elif player_one_cards[-1].value < player_two_cards[-1].value:
            player2.add_cards(player_one_cards)
            player2.add_cards(player_two_cards)
            at_war = False
        else:
            print('WAR!')
            if len(player1.all_cards) < 5:
                print('Player One unable to declare war!')
                print('Player Two is the winner!')
                game_on = False
                break
            elif len(player2.all_cards) < 5:
                print('Player Two unable to declare war!')
                print('Player One is the winner!')
                game_on = False
                break
            else:
                for num in range(5):
                    player_one_cards.append(player1.remove_one())
                    player_two_cards.append(player2.remove_one())
